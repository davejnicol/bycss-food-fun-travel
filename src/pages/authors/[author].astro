---
import { getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import ArticlePreview from "../../components/ArticlePreview.astro";
import AboutTheAuthor from "../../components/AboutTheAuthor.astro";
import NewsletterCTA from "../../components/NewsletterCTA.astro";

export async function getStaticPaths() {
	const allArticles = await getCollection("articles");
	allArticles.sort((a, b) => Date.parse(b.data.date) - Date.parse(a.data.date));

	// create an array of all the authors, with no repeats
	const uniqueAuthorData = [...new Set(allArticles.map((article) => article.data.author).flat())];

	const pattern = /(?<=src\/content\/authors\/)([^/]+)(?=\.json)/;

	const uniqueAuthorNames = uniqueAuthorData.map((path) => {
		const matchResult = path.match(pattern);

		if (!matchResult) {
			return null; // Handle cases where the path doesn't match
		}

		// Access the captured string at index 1 of the matchResult array
		const filename = matchResult[1];

		// Apply string methods to the captured string
		const words = filename.split("-");
		const capitalizedWords = words.map((word: string) => word.charAt(0).toUpperCase() + word.slice(1));

		return capitalizedWords.join(" ");
	});

	// map over the above to create a page for each author
	return uniqueAuthorNames.map((author) => {
		const slugFriendlyAuthor = author.toLowerCase().replace(/\s+/g, "-");

		const filteredArticles = allArticles.filter((article) => article.data.author.includes(`src/content/authors/${slugFriendlyAuthor}.json`));

		return {
			params: { author: slugFriendlyAuthor },
			props: {
				articles: filteredArticles,
				author: author,
				authorPath: slugFriendlyAuthor,
			},
		};
	});
}

const { articles, author, authorPath } = Astro.props;
const pageTitle = author + " | Travel Food Fun";

// Previous working solution before more refactoring
// const allAuthors = await Astro.glob("../../content/authors/*.json");
// const articleAuthor = author;
// const authorInfo = authors.find(function (author) {
// 	return author.name === articleAuthor;
// });

const articleAuthorName = authorPath;
const authorInfo = await import(`../../content/authors/${articleAuthorName}.json`).then((info) => info.default);
---

<BaseLayout title={pageTitle}>
	<div class="djne-container djne-flow">
		<section class="djne-section">
			<h1 class="djne-heading-2 djne-margin-block-end-8">{author} Articles</h1>
			<p class="djne-margin-block-end-8">The following articles are written by <span class="djne-fw-bold">{author}</span>.</p>
			<div class="djne-grid-auto-fit">
				{articles.map((article) => <ArticlePreview {article} excerptLength="20" />)}
			</div>
			<div class="djne-margin-block-start-12">
				<AboutTheAuthor name={authorInfo?.name} description={authorInfo?.description} image={authorInfo?.image} />
			</div>
		</section>
	</div>
	<div class="djne-container djne-margin-block-end-12" data-type="narrow">
		<NewsletterCTA withImage />
	</div>
</BaseLayout>
